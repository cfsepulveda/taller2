/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.formatting2

import cloud_computing.AmbienteDesplegue
import cloud_computing.Conexion
import cloud_computing.Infraestructura
import cloud_computing.SecurityGroup
import cloud_computing.Servidor
import cloud_computing.VPC
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(Infraestructura infraestructura, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		infraestructura.getLogins.format;
		for (SecurityGroup securityGroup : infraestructura.getSecuritygroups()) {
			securityGroup.format;
		}
		for (AmbienteDesplegue ambienteDesplegue : infraestructura.getAmbientesdesplegue()) {
			ambienteDesplegue.format;
		}
	}

	def dispatch void format(AmbienteDesplegue ambienteDesplegue, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (VPC vPC : ambienteDesplegue.getVpc()) {
			vPC.format;
		}
		for (Servidor servidor : ambienteDesplegue.getServidores()) {
			servidor.format;
		}
		for (Conexion conexion : ambienteDesplegue.getConexion()) {
			conexion.format;
		}
	}
	
	// TODO: implement for VPC
}
